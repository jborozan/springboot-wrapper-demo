<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>net.borozan</groupId>
        <artifactId>springboot-wrapper-demo</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    
    <artifactId>springboot-wrapper</artifactId>
    <description>Demo springboot wrapper for OSGI services</description>
    
    <dependencies>
    
        <!-- external deps -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>osgi.cmpn</artifactId>
            <version>6.0.0</version>
        </dependency>

        <!-- bundle deps -->
        <dependency>
            <groupId>net.borozan</groupId>
            <artifactId>bundle-api</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>net.borozan</groupId>
            <artifactId>bundle-one</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>net.borozan</groupId>
            <artifactId>bundle-two</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        
        <!-- Springboot deps -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.1.6.RELEASE</version>
        </dependency>
        
        <!-- Spring comes with initially embedded tomcat but let me use jetty instead -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
            <version>2.1.6.RELEASE</version>
        </dependency>
                
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.1.6.RELEASE</version>
                
                <!-- to externalize some artefacts and load them at runtime -->
                <!-- use loader.path or LOADER_PATH to point to them -->
                <!-- but ZIP layout must be used in that case -->
                <!-- so this time it is bundle-one to be externalized -->
                <configuration>
                    <layout>ZIP</layout>
                    <excludes>
                        <exclude>
                            <groupId>net.borozan</groupId>
                            <artifactId>bundle-one</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
                
                <executions>
                     <execution>
                         <goals>
                             <goal>repackage</goal>
                         </goals>
                     </execution>
                </executions>
            </plugin>
            
            <!-- do not include properties, cfgs and xmls in jar -->
            <!-- it is always good to provide them as external files at runtime -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <excludes>
                        <exclude>**/*.properties</exclude>
                        <exclude>**/*.cfg</exclude>
                        <exclude>**/*.xml</exclude>
                    </excludes>
                </configuration>
            </plugin>
            
            <!-- and resources for docker -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>prepare-docker-files</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/docker</outputDirectory>
                            <resources>
                                <resource>
                                        <directory>src/main/docker</directory>
                                        <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
        </plugins>    
    
    </build>
    
</project>